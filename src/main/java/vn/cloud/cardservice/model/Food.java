package vn.cloud.cardservice.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.AccessLevel;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.hibernate.annotations.CreationTimestamp;

import java.time.ZonedDateTime;

@Data
@NoArgsConstructor
@Entity
public class Food {

    @JsonProperty("foodId")
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Setter(AccessLevel.NONE) // prevent manually setting of Id using lombok, all Id must be generated by the database to maintain integrity
    @Column(unique=true)
    private Long id;
    private String title;
    private String description;
    private Double listDays;


    private Boolean isPendingPickup = false;

    private Boolean isCollected = false;

    private Boolean isListed = true;

    @JsonProperty("img")
    private String imageUrl;
    @JsonProperty("isHalal")
    private String halalStatus;


    private Double Longitude;


    private Double Latitude;

    @JsonProperty("foodLocation")
    @NotBlank
    @Pattern(regexp = "^[0-9]+$")
    @Size(min = 6, max = 6, message = "The attribute must be exactly 6 characters long")
    private String postcode;

    private Long requestId;

    @JsonProperty("publisher")
    @ManyToOne
    private IndividualUser individualUser;


    @JsonIgnore
    @Column(name = "created_at", nullable = false, updatable = false)
    @CreationTimestamp
    private ZonedDateTime createdAt;



    // special getters and setters, prevents client from tampering with lng and lat, only server will set the data
//
//    @JsonProperty(access = JsonProperty.Access.READ_ONLY)
//    public Double getLongitude() {
//        return Longitude;
//    }
//
//    @JsonIgnore
//    public void setLongitude(Double longitude) {
//        Longitude = longitude;
//    }
//
//    @JsonProperty(access = JsonProperty.Access.READ_ONLY)
//    public Double getLatitude() {
//        return Latitude;
//    }
//
//    @JsonIgnore
//    public void setLatitude(Double latitude) {
//        Latitude = latitude;
//    }
}
