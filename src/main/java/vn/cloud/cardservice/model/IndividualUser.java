package vn.cloud.cardservice.model;


import jakarta.annotation.Nullable;
import jakarta.persistence.*;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.*;
import vn.cloud.cardservice.validator.NoFunnyNames;

@Data
@NoArgsConstructor
@EqualsAndHashCode(callSuper=true) //include attributes from superclass in the equals and hashcode methods
@Entity
@Inheritance(strategy=InheritanceType.JOINED)
public class IndividualUser extends BaseUserModel{
	
	 @Id
	 @GeneratedValue(strategy = GenerationType.IDENTITY)
	 @Setter(AccessLevel.NONE) // prevent manually setting of Id using lombok, all Id must be generated by the database to maintain integrity
	 @Column(unique=true)
	 private Long id;
	 
	 @NoFunnyNames
	 @NotBlank
	 @Size(min = 6, max=50)
	 @Pattern(regexp="^\\D*$") //no digits
	 @Column(nullable=false)
	 private String name; 
	 
	 @Nullable
	 @Pattern(regexp="^\\+[0-9]+[0-9]+") //country code and phone number
	 private String phone;

	private String address;
	private String postalCode;

	 @Min(value = 0)
	 @Column(nullable=false)
	 private Double salary = 0.00;

	 @NotBlank
	 @Column(nullable=false)
	 private String role;

//	 @Column(nullable=false)
//	 private String level;
//
//	 @Min(value=0)
//	 @Column(nullable=false)
//	 private Integer points = 0;
//
//	 @DateTimeFormat(pattern = "dd/MM/yyyy")
//	 @Past
//	 @Nullable
//	 @Column(nullable=true)
//	 private LocalDate birth;


//	 @NotNull
//	 @Column(nullable=false)
//	 private Integer postcode;
}
